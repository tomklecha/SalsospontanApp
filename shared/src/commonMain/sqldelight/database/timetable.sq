--
--  ARTIST
--

CREATE TABLE artistEntity(
    uid INTEGER NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    type TEXT NOT NULL
);

getAllArtists:
SELECT *
FROM artistEntity
WHERE uid > 0;

insertArtist:
INSERT OR REPLACE
INTO artistEntity
(
uid,
name,
description,
type
)
VALUES(?,?,?,?);

--
--  VENUES
--

CREATE TABLE venueEntity(
    uid INTEGER NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL
);

getAllVenues:
SELECT *
FROM venueEntity
WHERE uid > 0;

insertVenue:
INSERT OR REPLACE
INTO venueEntity
(
uid,
name,
description
)
VALUES (?,?,?);

--
--  WORKSHOP
--

CREATE TABLE workshopEntity(
    uid INTEGER NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    timeSchedule TEXT NOT NULL,
    artistPrimaryUid INTEGER NOT NULL,
    artistSecondaryUid INTEGER,
    venueUid INTEGER NOT NULL,

    FOREIGN KEY(artistPrimaryUid)
        REFERENCES artistEntity(uid)
        ON DELETE CASCADE,

    FOREIGN KEY(artistSecondaryUid)
        REFERENCES artistEntity(uid)
        ON DELETE CASCADE,

    FOREIGN KEY(venueUid)
        REFERENCES venueEntity(uid)
        ON DELETE CASCADE
);

getAllWorkshops:
SELECT *
FROM workshopEntity
WHERE uid > 0;

insertWorkshop:
INSERT OR REPLACE
INTO workshopEntity
(
uid,
name,
description,
timeSchedule,
artistPrimaryUid,
artistSecondaryUid,
venueUid
)
VALUES (?,?,?,?,?,?,?);


